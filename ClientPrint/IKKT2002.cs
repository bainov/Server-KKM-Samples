using System.Diagnostics.CodeAnalysis;

namespace ClientPrint
{
    /// <summary>
    /// Требования к разработке драйверов для ККТ с функцией передачи в ОФД 2.2
    /// </summary>
    [SuppressMessage("ReSharper", "InconsistentNaming")]
    public interface IKkt2002
    {
        /// <summary>
        /// Получение данных из ККТ для регистрации фискального накопителя и последующей работы
        /// </summary>
        /// <param name="ИдУстройства">Идентификатор устройства</param>
        /// <param name="ТаблицаПараметровККТ"></param>
        /// <returns></returns>
        bool ПолучитьПараметрыККТ(string ИдУстройства, out string ТаблицаПараметровККТ);

        //GetDataKKT

        /// <summary>
        /// Операция с фискальным накопителем. После проведения операции происходит печать отчета о проведении соответствующей операции.
        /// </summary>
        /// <param name="ИдУстройства">Идентификатор устройства</param>
        /// <param name="ТипОперации">Тип операции: 1 - Регистрация 2 - Изменение параметров регистрации 3 - Закрытие ФН</param>
        /// <param name="ПараметрыФискализации">Данные для фискализации фискального накопителя</param>
        /// <returns></returns>
        bool ОперацияФН(string ИдУстройства, long ТипОперации, string ПараметрыФискализации);

        //OperationFN
        /// <summary>
        /// Открывает новую смену и печатает на ККТ отчет об открытии смены.
        /// </summary>
        /// <param name="ИдУстройства">Идентификатор устройства</param>
        /// <param name="НомерСмены">Номер смены</param>
        /// <param name="НомерДокумента">Номер отчета об открытии смены</param>
        /// <param name="ПараметрыСостояния">Параметры состояния (неизвестно как использовать)</param>
        /// <param name="ПараметрыОперации">XML структура с данными о кассире и ИНН кассира и заданием печати  </param>
        /// <returns></returns>
        bool ОткрытьСмену(string ИдУстройства, string ПараметрыОперации, out string ПараметрыСостояния, out int НомерСмены,
            out int НомерДокумента);

        //OpenShift

        /// <summary>
        /// Закрывает открытую ранее смену и печатает на ККТ отчет о закрытии смены.
        /// </summary>
        /// <param name="ИдУстройства">Идентификатор устройства</param>
        /// <param name="НомерСмены">Номер смены</param>
        /// <param name="НомерДокумента">Номер отчета об закрытии смены</param>
        ///  <param name="ПараметрыСостояния">Параметры состояния (неизвестно как использовать)</param>
        /// <param name="ПараметрыОперации">XML структура с данными о кассире и ИНН кассира и заданием печати  </param>
        /// <returns></returns>
        bool ЗакрытьСмену(string ИдУстройства, string ПараметрыОперации, out string ПараметрыСостояния, out int НомерСмены,
            out int НомерДокумента);

        //CloseShift

        /// <summary>
        /// Формирование чека в пакетном режиме. Передается структура, описывающая тип открываемого чека, фискальные и текстовые строки, штрих-коды, которые будут напечатаны. Также передаются суммы оплат для закрытия чека.
        /// </summary>
        /// <param name="ИдУстройства">Идентификатор устройства</param>
        /// <param name="Электронно">Формирование чека в только электроном виде.Печать чека не осуществляется.</param>
        /// <param name="ДанныеЧека">XML структура - описание чека.</param>
        /// <param name="НомерЧека">Номер фискального чека возвращаемый ФН</param>
        /// <param name="НомерСмены">Номер открытой смены</param>
        /// <param name="ФискальныйПризнак">Фискальный признак</param>
        /// <param name="АдресСайтаПроверки">Адрес сайта проверки</param>
        /// <returns></returns>
        bool СформироватьЧек(string ИдУстройства, bool Электронно, string ДанныеЧека, out int НомерЧека,
            out int НомерСмены, out string ФискальныйПризнак, out string АдресСайтаПроверки);

        //ProcessCheck

        /// <summary>
        /// Формирование чека коррекции в пакетном режиме. Передается структура, описывающая тип открываемого чека и атрибуты чека.
        /// </summary>
        /// <param name="ИдУстройства">Идентификатор устройства</param>
        /// <param name="ДанныеЧека">XML структура - описание чека.</param>
        /// <param name="НомерЧека">Номер фискального чека возвращаемый ФН</param>
        /// <param name="НомерСмены">Номер открытой смены</param>
        /// <param name="ФискальныйПризнак">Фискальный признак</param>
        /// <param name="АдресСайтаПроверки">Адрес сайта проверки</param>
        /// <returns></returns>
        bool СформироватьЧекКоррекции(string ИдУстройства, string ДанныеЧека, out int НомерЧека, out int НомерСмены,
            out string ФискальныйПризнак, out string АдресСайтаПроверки);

        //ProcessCorrectionCheck

        /// <summary>
        /// Печать текстового документа (текстовый слип-чек, информационная квитанция)
        /// </summary>
        /// <param name="ИдУстройства">Идентификатор устройства</param>
        /// <param name="ДанныеДокумента">	XML структура - описание текстового документа. </param>
        /// <returns>Значение true, если метод успешно выполнен; в противном случае — значение false.</returns>
        bool НапечататьТекстовыйДокумент(string ИдУстройства, string ДанныеДокумента);

        //PrintTextDocument

        /// <summary>
        /// Печатает на чек внесения/ выемки
        /// </summary>
        /// <param name="ИдУстройства">Идентификатор устройства</param>
        /// <param name="Сумма">Сумма внесения /выемки</param>
        /// <param name="ПараметрыОперации">XML структура с данными о кассире и ИНН кассира и заданием печати  </param>
        /// <returns>Значение true, если метод успешно выполнен; в противном случае — значение false.</returns>
        /// <remarks> (зависит от переданной суммы). Сумма &gt;= 0 - внесение, Сумма &lt; 0 - выемка.</remarks>
        ///
        bool НапечататьЧекВнесенияВыемки(string ИдУстройства, string ПараметрыОперации, double Сумма);

        //CashInOutcome

        /// <summary>
        /// Печатает на отчет за смену без закрытия кассовой смены
        /// </summary>
        /// <param name="ИдУстройства">Идентификатор устройства</param>
        /// <param name="ПараметрыОперации">XML структура с данными о кассире и ИНН кассира и заданием печати  </param>

        /// <returns>Значение true, если метод успешно выполнен; в противном случае — значение false.</returns>
        bool НапечататьОтчетБезГашения(string ИдУстройства, string ПараметрыОперации);

        //PrintXReport

        /// <summary>
        /// Получение текущего состояние ККТ.
        /// </summary>
        /// <param name="ИдУстройства">Идентификатор устройства</param>
        /// <param name="НомерЧека">Номер последнего пробитого фискального чека</param>
        /// <param name="НомерСмены">Номер смены</param>
        /// <param name="СтатусСмены">Состояние смены 1 - Закрыта 2 - Открыта 3 - Истекла</param>
        /// <param name="ПараметрыСостояния">XML структура - описание параметров состояния.</param>
        /// <returns>Значение true, если метод успешно выполнен; в противном случае — значение false.</returns>
        bool ПолучитьТекущееСостояние(string ИдУстройства, out int НомерЧека, out int НомерСмены, out int СтатусСмены,
            out string ПараметрыСостояния);

        //GetCurrentStatus

        /// <summary>
        /// Формирует отчет о текущем состоянии расчетов
        /// </summary>
        /// <param name="ИдУстройства">Идентификатор устройства</param>
        /// <param name="ПараметрыСостояния">Параметры состояния (неизвестно как использовать)</param>
        /// <param name="ПараметрыОперации">XML структура с данными о кассире и ИНН кассира и заданием печати  </param>
        /// <returns>Значение true, если метод успешно выполнен; в противном случае — значение false.</returns>
        bool ОтчетОТекущемСостоянииРасчетов(string ИдУстройства, string ПараметрыОперации,
            out string ПараметрыСостояния);

        //ReportCurrentStatusOfSettlements

        /// <summary>
        /// Производит открытие денежного ящика, подключенного к фискальному регистратору.
        /// </summary>
        /// <param name="ИдУстройства">Идентификатор устройства</param>
        /// <returns>Значение true, если метод успешно выполнен; в противном случае — значение false.</returns>
        bool ОткрытьДенежныйЯщик(string ИдУстройства);

        //OpenCashDrawer

        /// <summary>
        /// Получить ширину строки чека в символах.
        /// </summary>
        /// <param name="ИдУстройства">Идентификатор устройства</param>
        /// <param name="ШиринаСтроки">	Ширина строки в символах</param>
        /// <returns>Значение true, если метод успешно выполнен; в противном случае — значение false.</returns>
        bool ПолучитьШиринуСтроки(string ИдУстройства, out int ШиринаСтроки);

        //GetLineLength
    }
}